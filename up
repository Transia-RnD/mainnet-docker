#!/bin/bash

echo ""
echo '                   $$\                                 $$\ '
echo '                   $$ |                                $$ |'
echo '$$\   $$\ $$$$$$\  $$$$$$$\   $$$$$$\  $$\   $$\  $$$$$$$ |'
echo '\$$\ $$  |\____$$\ $$  __$$\  \____$$\ $$ |  $$ |$$  __$$ |'
echo ' \$$$$  / $$$$$$$ |$$ |  $$ | $$$$$$$ |$$ |  $$ |$$ /  $$ |'
echo ' $$  $$< $$  __$$ |$$ |  $$ |$$  __$$ |$$ |  $$ |$$ |  $$ |'
echo '$$  /\$$\\$$$$$$$ |$$ |  $$ |\$$$$$$$ |\$$$$$$  |\$$$$$$$ |'
echo '\__/  \__|\_______|\__|  \__| \_______| \______/  \_______|'
echo ""
echo ">>> MAINNET EDITION"
echo ""
echo ">>> NETWORK ID: [ 21337 ]"
echo ""

self(){
  DIR=$( cd "$( dirname "$0" )/" && pwd)
  echo $DIR
}

docker rm -f xahaud-mainnet

# Ugly - don't
chmod -R 777 $(self)/./store/bin 2> /dev/null

if [[ -e ./store/etc/xahaud.cfg ]]; then
  # config present
  if [[ $(du -k ./store/etc/xahaud.cfg | cut -f1) -gt 0 ]]; then
    # nonzero
    sampleconf=_
  fi
else
  # no config present, use sample
  sampleconf=
fi

docker run \
    -dit \
    --privileged \
    --network=host \
    --restart always \
    --platform linux/x86_64 \
    --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:rw \
    --name xahaud-mainnet \
    -p 22222:22 \
    -p 21337:21337 \
    -p 15005:15005 \
    -p 16005:16005 \
    -p 16006:16006 \
    -p 16007:16007 \
    -v $(self)/./store/db:/opt/xahaud/db \
    -v $(self)/./store/etc:/opt/xahaud/etc \
    -v $(self)/./store/log:/opt/xahaud/log \
    -v $(self)/./store/etc/xahaud.sample.cfg:/opt/xahaud/etc/xahaud.cfg$sampleconf \
    -v $(self)/./store/ssh/authorized_keys:/root/.ssh/authorized_keys \
    xahaud:mainnet

echo ""
echo "Xahaud running binary version:"
docker exec xahaud-mainnet sh -c 'cat /opt/xahaud/bin/xahaud|md5sum'|cut -d " " -f 1
echo "Xahaud running version string (build_version):"
# Give it a sec
sleep 3
docker exec xahaud-mainnet xahaud -q server_info|grep build_version|cut -d '"' -f 4
echo ""
echo "Pubkey:"
docker exec xahaud-mainnet xahaud -q server_info|grep pubkey_node|cut -d '"' -f 4
echo ""
